{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rajni\\\\ReactJS\\\\next-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetUpsId = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetUpsId.map(meetupId => ({\n      params: {\n        meetupId: meetupId._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetUpcollection = db.collection('meetups');\n  const selectedMeetup = await meetUpcollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  console.log(meetUpId);\n  return {\n    props: {\n      meetupData: {\n        image: selectedMeetup.image,\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/rajni/ReactJS/next-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","collection","meetUpsId","find","_id","toArray","close","fallback","paths","map","meetupId","params","toString","getStaticProps","context","meetUpId","meetUpcollection","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACA,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD5B;AAEI,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH9B;AAII,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcH;;AAGD,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AACA,QAAMC,SAAS,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAApB,EAA8BC,OAA9B,EAAxB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,SAAS,CAACO,GAAV,CAAcC,QAAQ,KAAK;AAC9BC,MAAAA,MAAM,EAAE;AACJD,QAAAA,QAAQ,EAAGA,QAAQ,CAACN,GAAV,CAAeQ,QAAf;AADN;AADsB,KAAL,CAAtB;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeD,QAAhC;AACA,QAAMZ,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMgB,gBAAgB,GAAGhB,EAAE,CAACC,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMgB,cAAc,GAAG,MAAMD,gBAAgB,CAACE,OAAjB,CAAyB;AAACd,IAAAA,GAAG,EAAElB,QAAQ,CAAC6B,QAAD;AAAd,GAAzB,CAA7B;AAEAjB,EAAAA,MAAM,CAACQ,KAAP;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACHxB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRG,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KADd;AAER0B,QAAAA,EAAE,EAAEJ,cAAc,CAACb,GAAf,CAAmBQ,QAAnB,EAFI;AAGRnB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAHd;AAIRG,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAJhB;AAKRF,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\n\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n    <Fragment>\r\n        <Head>\r\n            <title>{props.meetupData.title}</title>\r\n            <meta name='description' content={props.meetupData.description} />\r\n        </Head>\r\n        <MeetupDetail \r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}/>\r\n    </Fragment>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const collection = db.collection('meetups');\r\n    const meetUpsId = await collection.find({}, {_id: 1}).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetUpsId.map(meetupId => ({\r\n            params: {\r\n                meetupId: (meetupId._id).toString()\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetUpId = context.params.meetupId;\r\n    const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetUpcollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetUpcollection.findOne({_id: ObjectId(meetUpId)})\r\n\r\n    client.close();\r\n    \r\n    console.log(meetUpId);\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: selectedMeetup.image,\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n} \r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}