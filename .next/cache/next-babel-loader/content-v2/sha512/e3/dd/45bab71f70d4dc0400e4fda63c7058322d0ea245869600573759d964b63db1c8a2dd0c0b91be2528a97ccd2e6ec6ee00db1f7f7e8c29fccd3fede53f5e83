{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/rajni/ReactJS/next-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/rajni/ReactJS/next-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rajni\\\\ReactJS\\\\next-starting-project\\\\pages\\\\new-meetup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nfunction AddNewMeetupPage() {\n  _s();\n\n  var router = useRouter();\n\n  var addNewMeetupHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(meetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(meetupData),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              router.push('/');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addNewMeetupHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add new meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add new meetup for all the world\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: addNewMeetupHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewMeetupPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = AddNewMeetupPage;\nexport default AddNewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewMeetupPage\");","map":{"version":3,"sources":["C:/Users/rajni/ReactJS/next-starting-project/pages/new-meetup/index.js"],"names":["Fragment","useRouter","Head","NewMeetupForm","AddNewMeetupPage","router","addNewMeetupHandler","meetupData","fetch","method","body","JSON","stringify","headers","response","json","data","console","log","push"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AACzB,MAAMC,MAAM,GAAIJ,SAAS,EAAzB;;AACC,MAAMK,mBAAmB;AAAA,wEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDC,KAAK,CAAC,iBAAD,EAAoB;AAC5CC,gBAAAA,MAAM,EAAE,MADoC;AAE5CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAFsC;AAG5CM,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AAHmC,eAApB,CADJ;;AAAA;AAClBC,cAAAA,QADkB;AAAA;AAAA,qBASLA,QAAQ,CAACC,IAAT,EATK;;AAAA;AASlBC,cAAAA,IATkB;AAUxBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,cAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBb,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAaA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAgB,MAAA,WAAW,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxBQF,gB;UACUH,S;;;KADVG,gB;AA0BT,eAAeA,gBAAf","sourcesContent":["import { Fragment } from 'react';\r\n\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\n\r\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\r\n\r\nfunction AddNewMeetupPage() {\r\n   const router =  useRouter();\r\n    const addNewMeetupHandler = async (meetupData) => {\r\n        const response = await fetch('/api/new-meetup', {\r\n            method: 'POST',\r\n            body: JSON.stringify(meetupData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n        router.push('/');\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>Add new meetup</title>\r\n                <meta name='description' content='Add new meetup for all the world'/>\r\n            </Head>\r\n            <NewMeetupForm  onAddMeetup={addNewMeetupHandler}/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddNewMeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}