{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rajni\\\\ReactJS\\\\next-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://tacchi-canvas-prod.s3.amazonaws.com/uploads/work/image/174/Fab_Meetup_-_Identity_Design_by_Benjamin_Thomas__Creative_Director_in_Tokyo.jpg\",\n    title: \"A first meetup\",\n    address: \"some address 8, 333333, some city\",\n    description: \"Some description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetUpsId = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetUpsId.map(meetupId => ({\n      params: {\n        meetupId: meetupId._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //do API call to get single meetup data\n  const meetUpId = context.params.meetupId;\n  console.log(meetUpId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://tacchi-canvas-prod.s3.amazonaws.com/uploads/work/image/174/Fab_Meetup_-_Identity_Design_by_Benjamin_Thomas__Creative_Director_in_Tokyo.jpg\",\n        id: meetUpId,\n        title: \"A first meetup\",\n        address: \"some address 8, 333333, some city\",\n        description: \"Some description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/rajni/ReactJS/next-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","collection","meetUpsId","find","_id","toArray","close","fallback","paths","map","meetupId","params","toString","getStaticProps","context","meetUpId","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBAAO,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,oJADP;AAEC,IAAA,KAAK,EAAC,gBAFP;AAGC,IAAA,OAAO,EAAC,mCAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;AAGD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AACA,QAAMC,SAAS,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAApB,EAA8BC,OAA9B,EAAxB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,SAAS,CAACO,GAAV,CAAcC,QAAQ,KAAK;AAC9BC,MAAAA,MAAM,EAAE;AACJD,QAAAA,QAAQ,EAAGA,QAAQ,CAACN,GAAV,CAAeQ,QAAf;AADN;AADsB,KAAL,CAAtB;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeD,QAAhC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO;AACHG,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,oJADC;AAERC,QAAAA,EAAE,EAAEN,QAFI;AAGRO,QAAAA,KAAK,EAAE,gBAHC;AAIRC,QAAAA,OAAO,EAAE,mCAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails() {\r\n    return <MeetupDetail \r\n            image=\"https://tacchi-canvas-prod.s3.amazonaws.com/uploads/work/image/174/Fab_Meetup_-_Identity_Design_by_Benjamin_Thomas__Creative_Director_in_Tokyo.jpg\"\r\n            title=\"A first meetup\"\r\n            address=\"some address 8, 333333, some city\"\r\n            description=\"Some description\"/>\r\n}\r\n\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://rajnishkumar:Airtel@eventsdb.f5wxu.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const collection = db.collection('meetups');\r\n    const meetUpsId = await collection.find({}, {_id: 1}).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetUpsId.map(meetupId => ({\r\n            params: {\r\n                meetupId: (meetupId._id).toString()\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    //do API call to get single meetup data\r\n    const meetUpId = context.params.meetupId;\r\n    console.log(meetUpId);\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: \"https://tacchi-canvas-prod.s3.amazonaws.com/uploads/work/image/174/Fab_Meetup_-_Identity_Design_by_Benjamin_Thomas__Creative_Director_in_Tokyo.jpg\",\r\n                id: meetUpId,\r\n                title: \"A first meetup\",\r\n                address: \"some address 8, 333333, some city\",\r\n                description: \"Some description\"\r\n            }\r\n        }\r\n    }\r\n} \r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}